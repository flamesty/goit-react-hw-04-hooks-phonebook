{"version":3,"sources":["components/Filter/Filter.module.css","components/Container/Container.module.css","App.module.css","components/AddContactForm/AddContactForm.module.css","components/AddContactForm/AddContactForm.jsx","components/Container/Container.jsx","components/Filter/Filter.jsx","components/ContactList/ContactList.jsx","App.jsx","index.js","components/ContactList/ContactList.module.css"],"names":["module","exports","initialState","name","number","AddContactForm","contacts","handleAddContact","useState","contact","setContact","handleContactData","e","target","value","onSubmit","preventDefault","alert","newContact","id","shortid","generate","className","s","form","label","input","type","pattern","title","required","onChange","btn","Container","children","container","Filter","filterText","handleFilter","ContactList","handleDelete","filteredContacts","filter","toLowerCase","includes","list","map","item","info","onClick","localStorageContactsKey","App","setContacts","setFilter","useEffect","currentContacts","JSON","parse","localStorage","getItem","setItem","stringify","event","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b55c13de.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__3DcZT\",\"input\":\"Filter_input__2DoVp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__3RIox\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainContainer\":\"App_mainContainer__2o5r7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"AddContactForm_form__eBlI5\",\"label\":\"AddContactForm_label__31e87\",\"input\":\"AddContactForm_input__31n-O\",\"btn\":\"AddContactForm_btn__3a61C\"};","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport shortid from \"shortid\";\n\nimport s from \"./AddContactForm.module.css\";\n\nconst initialState = {\n  name: \"\",\n  number: \"\",\n};\n\nconst AddContactForm = ({ contacts, handleAddContact }) => {\n  const [contact, setContact] = useState(initialState);\n\n  const handleContactData = (e) =>\n    setContact({\n      ...contact,\n      [e.target.name]: e.target.value,\n    });\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    for (const { name } of contacts) {\n      if (name === contact.name) {\n        alert(`${name} is already in contacts`);\n\n        return;\n      }\n    }\n\n    const newContact = {\n      id: shortid.generate(),\n      name: contact.name,\n      number: contact.number,\n    };\n\n    handleAddContact(newContact);\n\n    setContact({ name: \"\", number: \"\" });\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className={s.form}>\n      <label className={s.label}>\n        Name\n        <input\n          className={s.input}\n          value={contact.name}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n          onChange={handleContactData}\n        />\n      </label>\n\n      <label className={s.label}>\n        Number\n        <input\n          className={s.input}\n          value={contact.number}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n          onChange={handleContactData}\n        />\n      </label>\n\n      <button type=\"submit\" className={s.btn}>\n        Add contact\n      </button>\n    </form>\n  );\n};\n\nAddContactForm.propTypes = {\n  contacts: PropTypes.array.isRequired,\n  handleAddContact: PropTypes.func.isRequired,\n};\n\nexport default AddContactForm;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './Container.module.css';\n\nfunction Container({ children }) {\n  return <div className={s.container}>{children}</div>;\n}\n\nContainer.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Container;","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport s from \"./Filter.module.css\";\n\nconst Filter = ({ filterText, handleFilter }) => (\n  <>\n    <label className={s.label}>\n      Find contacts by name\n      <input\n        className={s.input}\n        type=\"text\"\n        value={filterText}\n        onChange={handleFilter}\n      />\n    </label>\n  </>\n);\n\nFilter.propTypes = {\n  filterText: PropTypes.string.isRequired,\n  handleFilter: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport s from \"./ContactList.module.css\";\n\nconst ContactList = ({ contacts, filterText, handleDelete }) => {\n  const filteredContacts = contacts.filter(({ name }) =>\n    name.toLowerCase().includes(filterText.toLowerCase())\n  );\n\n  return (\n    <ul className={s.list}>\n      {filteredContacts.map(({ id, name, number }) => (\n        <li key={id} className={s.item}>\n          <p className={s.info}>\n            {name}: {number}\n          </p>\n\n          <button\n            className={s.btn}\n            type=\"button\"\n            onClick={() => handleDelete(id)}\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.array.isRequired,\n  filterText: PropTypes.string.isRequired,\n  handleDelete: PropTypes.func.isRequired,\n};\n\nexport default ContactList;\n","import React, { useState, useEffect } from \"react\";\n\nimport AddContactForm from \"./components/AddContactForm/AddContactForm\";\nimport Container from \"./components/Container/Container\";\nimport Filter from \"./components/Filter/Filter\";\nimport ContactList from \"./components/ContactList/ContactList\";\n\nimport s from \"./App.module.css\";\n\nconst localStorageContactsKey = \"contacts\";\n\nconst App = () => {\n  const [contacts, setContacts] = useState([]);\n  const [filter, setFilter] = useState(\"\");\n\n  useEffect(() => {\n    const currentContacts = JSON.parse(\n      localStorage.getItem(localStorageContactsKey)\n    );\n\n    if (currentContacts) {\n      setContacts(currentContacts);\n    }\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem(localStorageContactsKey, JSON.stringify(contacts));\n  }, [contacts]);\n\n  const handleAddContact = (newContact) =>\n    setContacts([...contacts, newContact]);\n\n  const handleFilter = (event) => setFilter(event.target.value);\n\n  const handleDelete = (id) => {\n    const filteredContacts = contacts.filter((contact) => contact.id !== id);\n\n    setContacts(filteredContacts);\n  };\n\n  return (\n    <Container>\n      <div className={s.container}>\n        <h1>Phonebook</h1>\n        <AddContactForm handleAddContact={handleAddContact} contacts={contacts} />\n\n        <h2>Contacts</h2>\n        <Filter filterText={filter} handleFilter={handleFilter} />\n        <ContactList\n          contacts={contacts}\n          filterText={filter}\n          handleDelete={handleDelete}\n        />\n      </div>\n    </Container>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__2T7aG\",\"item\":\"ContactList_item__3YsZK\",\"btn\":\"ContactList_btn__1Xk4q\"};"],"sourceRoot":""}